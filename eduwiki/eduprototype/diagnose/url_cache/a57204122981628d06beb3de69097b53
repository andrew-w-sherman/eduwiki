POSIX (/pzks/ POZ-iks), an acronym for "Portable Operating System Interface", is a family of standards specified by the IEEE for maintaining compatibility between operating systems. POSIX defines the application programming interface (API), along with command line shells and utility interfaces, for software compatibility with variants of Unix and other operating systems.


== Name ==
Originally, the name "POSIX" referred to IEEE Std 1003.1-1988, released in 1988. The family of POSIX standards is formally designated as IEEE 1003 and the international standard name is ISO/IEC 9945.
The standards emerged from a project that began circa 1985. Richard Stallman suggested the name POSIX to the IEEE instead of former IEEE-IX. The committee found it more easily pronounceable and memorable, so the committee adopted it.


== Overview ==
The POSIX specifications for Unix-like operating system environments originally consisted of a single document for the core programming interface, but eventually grew to 19 separate documents (for example, POSIX.1, POSIX.2 etc.) [1]. The standardized user command line and scripting interface were based on the Korn shell. Many user-level programs, services, and utilities including awk, echo, ed were also standardized, along with required program-level services including basic I/O (file, terminal, and network) services. POSIX also defines a standard threading library API which is supported by most modern operating systems. Nowadays, most of POSIX parts are combined into a single standard, IEEE Std 1003.1-2008, also known as POSIX.1-2008.
As of 2009, POSIX documentation is divided in two parts:
POSIX.1-2008: POSIX Base Definitions, System Interfaces, and Commands and Utilities (which include POSIX.1, extensions for POSIX.1, Real-time Services, Threads Interface, Real-time Extensions, Security Interface, Network File Access and Network Process-to-Process Communications, User Portability Extensions, Corrections and Extensions, Protection and Control Utilities and Batch System Utilities)
POSIX Conformance Testing: A test suite for POSIX accompanies the standard: PCTS or the POSIX Conformance Test Suite.
The development of the POSIX standard takes place in the Austin Group, a joint working group linking the Open Group and the ISO organization.


== Versions ==


=== Parts before 1997 ===
Before 1997, POSIX comprised several standards:


==== POSIX.1 ====
POSIX.1, Core Services (incorporates Standard ANSI C) (IEEE Std 1003.1-1988)
Process Creation and Control
Signals
Floating Point Exceptions
Segmentation / Memory Violations
Illegal Instructions
Bus Errors
Timers
File and Directory Operations
Pipes
C Library (Standard C)
I/O Port Interface and Control
Process Triggers


==== POSIX.1b ====
POSIX.1b, Real-time extensions (IEEE Std 1003.1b-1993)
Priority Scheduling
Real-Time Signals
Clocks and Timers
Semaphores
Message Passing
Shared Memory
Asynch and Synch I/O
Memory Locking Interface


==== POSIX.1c ====
POSIX.1c, Threads extensions (IEEE Std 1003.1c-1995)
Thread Creation, Control, and Cleanup
Thread Scheduling
Thread Synchronization
Signal Handling


==== POSIX.2 ====
POSIX.2, Shell and Utilities (IEEE Std 1003.2-1992)
Command Interpreter
Utility Programs


=== Versions after 1997 ===
After 1997, the Austin Group developed the POSIX revisions. The specifications are known under the name Single UNIX Specification, before they become a POSIX standard when formally approved by the ISO.


==== POSIX.1-2001 ====
POSIX.1-2001 or IEEE Std 1003.1-2001 equates to the Single UNIX Specification version 3
This standard consisted of:
the Base Definitions, Issue 6,
the System Interfaces and Headers, Issue 6,
the Commands and Utilities, Issue 6.


==== POSIX.1-2004 (with two TCs) ====
IEEE Std 1003.1-2004 involved a minor update of POSIX.1-2001. It incorporated two technical corrigenda. Its contents are available on the web.


==== POSIX.1-2008 ====
As of 2009 POSIX.1-2008 or IEEE Std 1003.1-2008 represents the current version. A free online copy is available.
This standard consists of:
the Base Definitions, Issue 7,
the System Interfaces and Headers, Issue 7,
the Commands and Utilities, Issue 7.


== Controversies ==


=== 512- vs 1024-byte blocks ===
POSIX mandates 512-byte block sizes for the df and du utilities, reflecting the default size of blocks on disks. When Richard Stallman and the GNU team were implementing POSIX for the GNU operating system, they objected to this on the grounds that most people think in terms of 1024 byte (or 1 KiB) blocks. The environment variable POSIXLY_CORRECT was introduced to allow the user to force the standards-compliant behaviour. The variable name POSIX_ME_HARDER was also discussed.


== POSIX-oriented operating systems ==
Depending upon the degree of compliance with the standards, one can classify operating systems as fully or partly POSIX compatible. Certified products can be found at the IEEE's website.


=== Fully POSIX-compliant ===
Some versions of the following operating systems conform (i.e., are 100% compliant) to one or more of the various POSIX standards.


=== Mostly POSIX-compliant ===
The following, while not officially certified as POSIX compatible, comply in large part:
BeOS (and subsequently Haiku)
FreeBSD
Contiki
Darwin (core of OS X and iOS)
illumos
Linux (most distributions  see Linux Standard Base)
MINIX (now MINIX3)
NetBSD
Nucleus RTOS
OpenBSD
OpenSolaris
PikeOS RTOS for embedded systems with optional PSE51 and PSE52 partitions; see partition (mainframe)
RTEMS  POSIX API support designed to IEEE Std. 1003.13-2003 PSE52
Sanos
SkyOS
Syllable
VSTa
VxWorks ( VxWorks is often used as a shell around non-posix Kernels i.e. TiMOS/SROS )


==== POSIX for Windows ====
Cygwin provides a largely POSIX-compliant development and run-time environment for Microsoft Windows.
MinGW, formerly a fork of Cygwin, provides a less POSIX-compliant development environment and supports compatible C-programmed applications via Msvcrt, Microsoft's old Visual C runtime library.

Microsoft POSIX subsystem, an optional Windows subsystem included in Windows NT-based operating systems up to Windows 2000. POSIX-1 as it stood in 1990 revision  no threads, no sockets.
Interix, originally OpenNT by Softway Systems, Inc., is an upgrade and replacement for Microsoft POSIX subsystem that was purchased by Microsoft in 1999. It was initially marketed as a stand-alone add-on product and then later included it as a component in Windows Services for UNIX (SFU) and finally incorporated it as a component in Windows Server 2003 R2 and later Windows OS releases under the name "Subsystem for UNIX-based Applications" (SUA); later made deprecated in 2012 (Windows 8) and dropped in 2013 (2012 R2, 8.1). It enables full POSIX compliance for certain Microsoft Windows products.
UWIN from AT&T Research implements a POSIX layer on top of the Win32 APIs.
MKS Toolkit, originally created for MS-DOS, is a software package produced and maintained by MKS Inc. that provides a Unix-like environment for scripting, connectivity and porting Unix and Linux software to both 32- and 64-bit Microsoft Windows systems. A subset of it was included in the first release of Windows Services for UNIX (SFU) in 1998.


==== POSIX for OS/2 ====
Mostly POSIX compliant environments for OS/2:
emx+gcc  largely POSIX compliant


==== POSIX for DOS ====
Partially POSIX compliant environments for DOS include:
emx+gcc  largely POSIX compliant
DJGPP  partially POSIX compliant


==== Compliant via compatibility feature ====
The following are not officially certified as POSIX compatible, but they conform in large part to the standards by implementing POSIX support via some sort of compatibility feature, usually translation libraries, or a layer atop the kernel. Without these features, they are usually noncompliant.
eCos  POSIX is part of standard distribution, and used by many applications. 'external links' section below has more information.
MorphOS (through the built-in ixemul library)
OpenVMS (through optional POSIX package)
OpenVOS is an optional POSIX-compliant layer atop the Stratus VOS kernel
Plan 9 from Bell Labs APE - ANSI/POSIX Environment
RIOT (through optional POSIX module)
Symbian OS with PIPS (PIPS Is POSIX on Symbian)
Windows NT kernel when using Microsoft SFU 3.5 or SUA
Windows 2000 Server or Professional with Service Pack 3 or later. To be POSIX compliant, one must activate optional features of Windows NT and Windows 2000 Server.
Windows XP Professional with Service Pack 1 or later
Windows Server 2003
Windows Vista (Ultimate / Enterprise)
Windows 7 (Ultimate / Enterprise)

z/OS (is certified as compliant)


== See also ==
POSIX signal
POSIX Threads
POSIX sockets are basically Berkeley sockets
TRON project and Common User Access  alternative OS standards to POSIX
Interix  a full-featured POSIX and Unix environment subsystem for Microsoft's Windows NT-based operating systems
C POSIX library
Real-time operating system


== References ==


== External links ==
The Austin Group. The Open Group .
"The Portable Application Standards Committee" 
POSIX Certification Authority. IEEE .
The UNIX System (home page). The Open Group 
"Base Specifications". POSIX.1-2008 (7). The Open Group 
What could have been IEEE 1003.1e/2c. Tuxomania